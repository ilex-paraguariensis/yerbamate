{
    "root": "vit",
    "backbone": "torch",
    "package": "vit",
    "type": "experiment",
    "source": "pip-package-source",
    "url": "https://github.com/lucidrains/vit-pytorch",
    "pip": {
        "pip_package": "vit-pytorch",
        "pip_version": "0.22.0",
        "pip_requirements": "requirements.txt"
    },
    "export": {
        "type": "models",
        "root_dir": "vit",
        "models": [
            "ViT",
            "Dino",
            "CrossViT",
            "DeepViT",
            "CaiT",
            "T2TViT"
        ],
        "full_param_export_fle": "vit_full_params.json"
    },
    "description": "Vision Transformer (ViT) in PyTorch",
    "version": "0.22.0",
    "author": "lucidrains",
    "license": "MIT",
    "params": {
        "pytorch_lightning_module": {
            "module": "base_classification",
            "class": "LightningClassificationModule",
            "params": {
                "classifier": {
                    "module": "modules.resnet.resnet",
                    "object_key": "classifier",
                    "class": "ResNet",
                    "params": {
                        "block": "BasicBlock",
                        "layers": [
                            3,
                            4,
                            6,
                            3
                        ],
                        "num_classes": 10,
                        "in_channels": 3,
                        "zero_init_residual": false,
                        "groups": 1,
                        "width_per_group": 64,
                        "replace_stride_with_dilation": [
                            false,
                            false,
                            false
                        ],
                        "norm_layer": "BatchNorm2d"
                    }
                },
                "optimizers": {
                    "optimizer": {
                        "module": "torch.optim",
                        "class": "Adam",
                        "object_key": "optimizer",
                        "params": {
                            "lr": 0.0004,
                            "betas": [
                                0.5,
                                0.999
                            ],
                            "params": {
                                "function_call": "parameters",
                                "object_key": "classifier"
                            }
                        }
                    },
                    "lr_scheduler": {
                        "monitor": "val_loss",
                        "scheduler": {
                            "module": "torch.optim.lr_scheduler",
                            "class": "ReduceLROnPlateau",
                            "params": {
                                "optimizer": {
                                    "object": true,
                                    "object_key": "optimizer"
                                },
                                "mode": "min",
                                "factor": 0.5,
                                "threshold": 1e-08,
                                "threshold_mode": "rel",
                                "patience": 0,
                                "verbose": true
                            }
                        }
                    }
                }
            }
        },
        "trainer": {
            "module": "pytorch_lightning",
            "class": "Trainer",
            "params": {
                "gpus": 1,
                "max_epochs": 100,
                "precision": 16,
                "gradient_clip_val": 0.5,
                "enable_checkpointing": true,
                "callbacks": [
                    {
                        "module": "pytorch_lightning.callbacks",
                        "class": "EarlyStopping",
                        "params": {
                            "monitor": "val_loss",
                            "patience": 10,
                            "mode": "min"
                        }
                    },
                    {
                        "module": "pytorch_lightning.callbacks",
                        "class": "ModelCheckpoint",
                        "params": {
                            "dirpath": "{save_dir}/checkpoints",
                            "monitor": "val_loss",
                            "save_top_k": 1,
                            "verbose": true,
                            "save_last": true,
                            "mode": "min"
                        }
                    }
                ],
                "logger": {
                    "module": "pytorch_lightning.loggers",
                    "class": "CSVLogger",
                    "params": {
                        "save_dir": "./logs"
                    }
                }
            }
        },
        "data": {
            "module": "data_loaders.cifar10.data_loader",
            "class": "CifarLightningDataModule",
            "params": {
                "location": "./data/cifar10",
                "batch_size": 128,
                "image_size": [
                    256,
                    256
                ],
                "crop_size": 4
            }
        }
    }
}